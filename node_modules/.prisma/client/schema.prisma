generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  CUSTOMER
  WORKER
  ADMIN
}

model User {
  // Core Fields
  id          Int     @id @default(autoincrement())
  first_name  String  @db.VarChar(100)
  last_name   String  @db.VarChar(100)
  email       String  @unique @db.VarChar(100)
  phone       String? @db.VarChar(20)
  password    String  @db.VarChar(100)
  role        Role    @default(CUSTOMER)
  is_verified Boolean @default(false)

  // Admin-Specific
  is_super_admin       Boolean   @default(false)
  last_password_change DateTime?
  invited_by_id        Int?
  invited_by           User?     @relation("InvitedBy", fields: [invited_by_id], references: [id])
  invited_users        User[]    @relation("InvitedBy")

  // Audit Log Relations
  admin_actions  AdminAuditLog[] @relation("AdminActions")
  target_actions AdminAuditLog[] @relation("TargetActions")

  // Identification
  gender    String? @db.VarChar(10)
  id_type   String? @db.VarChar(20)
  id_number String? @db.VarChar(50)

  // Halal Preferences
  prayer_in_room   Boolean @default(false)
  no_alcohol       Boolean @default(true)
  zabihah_only     Boolean @default(true)
  special_requests String?

  // Worker-Specific
  position   String? @db.VarChar(50)
  department String? @db.VarChar(50)

  // Timestamps
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  // Indexes
  @@index([email])
  @@index([role])
  @@index([id_number])
  @@index([invited_by_id])
}

model AdminAuditLog {
  id         Int      @id @default(autoincrement())
  action     String
  admin      User     @relation("AdminActions", fields: [adminId], references: [id])
  adminId    Int
  target     User     @relation("TargetActions", fields: [targetId], references: [id])
  targetId   Int
  metadata   Json?
  created_at DateTime @default(now())
}
